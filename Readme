# Create and Deploy an API

## Step 1: API

To verify the competency in writing code.

You will find a [swagger spec](https://gitlab.scratchpay.com/-/snippets/42/raw/main/swagger.yaml) defining an API that you must create. It is a simple user system with a single endpoint. Please use the specification and write an API in the language of your choosing. Keep in mind that you will need to store the user information.

###Process

1. Created springboot application and pushed it to github (https://github.com/yash1th25/scratchpay) 

2. To run it in your local, you can download it by cloning the directory to your local using git clone

gh repo clone yash1th25/scratchpay

3. To build code, using the below commands

./mvnw clean install

4. To run the application

java -jar ./target/restapi-0.0.1-SNAPSHOT.jar

## Step 2: Local Setup

This step is to verify your competency in setting up a development workflow.

Create a local environment that can be used to verify the code. Please keep in mind that a large number of projects are done with various setups (Unix and Windows based), so on any local setup please take into consideration this limitation (i.e. make sure it works across platforms). There is a [CSV](https://gitlab.scratchpay.com/-/snippets/42/raw/main/data.csv) file containing data that should be loaded in order to test your setup. Please think of a creative way to make loading the data easier.

## Step 3: Containerization and Orchestration

This step is to test your understanding of containerization, automation and orchestration.

Please containerize your application and create the required manifests/configuration to deploy your application to a Kubernetes cluster. Please use best practices when setting this up (treat it as if it were going into production). Part of the process should include the automation of loading the data into the storage that you have chosen.

_NB:_ Scratchpay is a Fintech company, so while we believe in innovation, this should not be at the cost of compromising on security.
